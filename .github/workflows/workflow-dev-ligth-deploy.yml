env:
  APP_NAME: 'fe-agencies-reto'

name: fe-agencies-reto-dev-ligth-deploy
run-name: Deploying ${{ github.event.inputs.targetBranch || 'develop' }} branch to DEV. By @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      targetBranch:
        description: 'Branch to deploy. By default is develop'
        type: string

jobs:
  Build:
    runs-on: ubuntu-22.04
    environment: DEV

    steps:
    - name: Checkout to repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.targetBranch || 'develop' }}

    - name: Setting NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies and build
      run: |
        npm ci
        npm run build
        cat src/app/shared/components/ui/bcp-header/bcp-header.component.html

    # ! TODO: Delete
    - name: Getting package version
      run: |
        sudo apt-get install jq
        VERSION=$(jq -r '.version' package.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "The package version is $VERSION"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ghcr.io/${{ github.actor }}/dev/${{ env.APP_NAME }}:latest

  Deploy:
    runs-on: self-hosted
    needs: Build

    steps:
      - name: Deploying webapp
        env:
          DOCKER_IMG: ghcr.io/${{ github.actor }}/dev/${{ env.APP_NAME }}:latest
        run: |

          if [ "$(docker ps -a -q -f name=${{ env.APP_NAME }})" ]; then
            echo 'Eliminando contenedor ${{ env.APP_NAME }}'
            docker rm -f $(docker ps -a -q -f name=${{ env.APP_NAME }})
          fi

          echo 'Creando contenedor ${{ env.APP_NAME }}'
          docker run -d \
            --name ${{ env.APP_NAME }} \
            --restart always \
            --pull always \
            -p 80:80 \
            ${{ env.DOCKER_IMG }}




