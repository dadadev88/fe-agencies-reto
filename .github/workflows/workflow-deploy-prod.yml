name: workflow-deploy-prod
run-name: Deploying "${{ github.event.inputs.targetBranch }}" to PROD

on:
  workflow_dispatch:
    inputs:
      targetBranch:
        description: 'RC to deploy'
        required: true
        type: string

env:
  AZURE_WEBAPP_NAME: wappeusbcptip01
  DOCKER_IMG: ghcr.io/dadadev88/fe-agencies-reto

jobs:
  BranchValidation:
    name: Branch validation
    runs-on: ubuntu-latest

    steps:
      - name: Validate RC branch name
        env:
          TARGET_BRANCH: ${{ github.event.inputs.targetBranch }}
        run: |
          hasError=0
          if ! [[ $TARGET_BRANCH == RC-CERT* ]]; then
            hasError=1
            echo "La rama a desplegar debe ser una de Release Candidate, esta debe empezar con las siglas 'RC-CERT'"
          fi
          if ! git branch | grep "$TARGET_BRANCH"; then
            hasError=1
            echo "No existe rama $TARGET_BRANCH"
          fi
          if [[ $hasError -eq 1 ]]; then
            echo "Rama $TARGET_BRANCH no válida"
            exit 1
          else
            echo "Rama $TARGET_BRANCH validada correctamente, continuará con job BuildAndDeploy"
          fi

  BuildAndDeploy:
    if: ${{ startsWith(github.event.inputs.targetBranch, 'RC-CERT') || github.event.inputs.targetBranch == 'master' }}
    name: Build and Deploy Web App
    runs-on: ubuntu-latest
    environment: PROD
    needs: BranchValidation

    steps:
    - name: Checkout to branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.targetBranch || 'master' }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMG }}:${{ github.event.inputs.targetBranch }}

    - name: 'Deploy to Azure WebApp'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.DOCKER_IMG }}:${{ github.event.inputs.targetBranch }}
