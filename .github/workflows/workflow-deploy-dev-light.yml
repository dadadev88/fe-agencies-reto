name: workflow-deploy-dev-light
run-name: Deploying ${{ github.ref_name }} branch to DEV

env:
  APP_NAME: 'fe-agencies-reto'
  DOCKER_IMG: ghcr.io/dadadev88/dev/fe-agencies-reto

on:
  workflow_dispatch:
    # inputs:
    #   targetBranch:
    #     description: 'Branch to deploy. By default is develop'
    #     type: string

jobs:
  Build:
    name: Building webapp
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout to repository
      uses: actions/checkout@v4
      # with:
      #   ref: ${{ github.event.inputs.targetBranch || 'develop' }}


    - name: Getting package version
      # echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
      # Para exportar al entorno de Github y poder usar en otros pasos del job (no se comparte con otros jobs)
      run: |
        sudo apt-get install jq && PKG_VERSION=$(jq -r '.version' package.json)
        echo "The package version is $PKG_VERSION"
        echo "::set-output name=PKG_VERSION::$(echo $PKG_VERSION)"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        # context: . # Requerido si se hace checkout a una rama diferecta a la del workflow
        push: true
        tags: ${{ env.DOCKER_IMG }}:${{ env.PKG_VERSION }}

  Deploy:
    name: Deploying webapp
    runs-on: self-hosted
    needs: Build

    steps:
      - name: Deploying webapp
        run: |
          if [ "$(docker ps -a -q -f name=${{ env.APP_NAME }})" ]; then
            echo 'Eliminando contenedor ${{ env.APP_NAME }}'
            docker rm -f $(docker ps -a -q -f name=${{ env.APP_NAME }})
          fi

          echo 'Creando contenedor ${{ env.APP_NAME }}'
          docker run -d \
            --name ${{ env.APP_NAME }} \
            --restart always \
            --pull always \
            -p 80:80 \
            ${{ env.DOCKER_IMG }}:${{ needs.Build.outputs.PKG_VERSION }}




